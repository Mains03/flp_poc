cat :: [Nat] -> [Nat] -> [Nat]
cat xs ys = case xs of
    [] -> ys.
    (x:xs) -> x : (cat xs ys).

last :: [Nat] -> Nat
last xs = exists ys :: [Nat]. exists y :: Nat.
    cat ys [y] =:= xs. y.

last [1, 2, 3, 4, 5, 6, 7, 8].